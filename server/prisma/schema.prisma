generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATASET")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

enum UserType {
  ADMIN
  USER
}

model Users {
  user_id             String    @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_name           String    @db.VarChar(255)
  user_email          String    @unique @db.VarChar(255)
  user_password       String    @db.VarChar(255)
  user_phone_number   String    @db.VarChar(255)
  user_type           UserType[]  @default([USER])  
  customers           Customers[]

  @@map("users")
}

model Customers {
  customer_id         String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_first_name String
  customer_last_name  String
  customer_address    String
  customer_user       Users?    @relation(fields: [customer_userId], references: [user_id], onDelete: SetNull)
  customer_userId     String?  @db.Uuid
  customer_orders     Orders[]
  customer_vehicles   Vehicles[]
  customer_files      Files[]

  @@map("customers")
}

model Orders {
  order_id            String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_date    DateTime
  payment_status String
  customer      Customers @relation(fields: [customerId], references: [customer_id], onDelete: Cascade)
  customerId    String   @db.Uuid

  @@map("orders")
}

model Vehicles {
  vehicle_id         String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  make       String
  model      String
  year       String
  customer   Customers @relation(fields: [customerId], references: [customer_id], onDelete: Cascade)
  customerId String   @db.Uuid

  @@map("vehicles")
}

model Files {
  file_id         String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  file_name  String
  file_path  String
  file_size  Int
  customer   Customers @relation(fields: [customerId], references: [customer_id], onDelete: Cascade)
  customerId String   @db.Uuid

  @@map("files")
}
